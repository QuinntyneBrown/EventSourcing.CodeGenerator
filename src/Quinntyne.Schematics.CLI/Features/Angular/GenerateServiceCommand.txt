import { Injectable, Inject } from "@angular/core";
import { HttpClient } from "@angular/common/http";
import { Observable } from "rxjs";
import { map } from "rxjs/operators";
import { baseUrl } from "../core/constants";
import { {{ entityNamePascalCase }} } from "./{{ entityNameSnakeCase }}.model";

@Injectable()
export class {{ entityNamePascalCase }}Service {
  constructor(
    @Inject(baseUrl) private _baseUrl:string,
    private _client: HttpClient
  ) { }

  public get(): Observable<Array<{{ entityNamePascalCase }}>> {
    return this._client.get<{ {{ entityNameCamelCasePlural }}: Array<{{ entityNamePascalCase }}> }>(`${this._baseUrl}api/{{ entityNameCamelCasePlural }}`)
      .pipe(
        map(x => x.{{ entityNameCamelCasePlural }})
      );
  }

  public getById(options: { {{ entityNameCamelCase }}Id: string }): Observable<{{ entityNamePascalCase }}> {
    return this._client.get<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }>(`${this._baseUrl}api/{{ entityNameCamelCasePlural }}/${options.{{ entityNameCamelCase }}Id}`)
      .pipe(
        map(x => x.{{ entityNameCamelCase }})
      );
  }

  public remove(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<void> {
    return this._client.delete<void>(`${this._baseUrl}api/{{ entityNameCamelCasePlural }}/${options.{{ entityNameCamelCase }}.{{ entityNameCamelCase }}Id}`);
  }

  public create(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<{ {{ entityNameCamelCase }}Id: string }> {
    return this._client.post<{ {{ entityNameCamelCase }}Id: string }>(`${this._baseUrl}api/{{ entityNameCamelCasePlural }}`, { {{ entityNameCamelCase }}: options.{{ entityNameCamelCase }} });
  }

  public update(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<{ {{ entityNameCamelCase }}Id: string }> {
    return this._client.put<{ {{ entityNameCamelCase }}Id: string }>(`${this._baseUrl}api/{{ entityNameCamelCasePlural }}`, { {{ entityNameCamelCase }}: options.{{ entityNameCamelCase }} });
  }
}
