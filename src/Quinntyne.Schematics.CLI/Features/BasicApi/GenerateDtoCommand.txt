using {{ rootNamespace }}.Domain.Models;
using FluentValidation;
using System;

namespace {{ namespace }}
{
    public class {{ entityNamePascalCase }}DtoValidator: AbstractValidator<{{ entityNamePascalCase }}Dto>
    {
        public {{ entityNamePascalCase }}DtoValidator()
        {
            RuleFor(x => x.{{ entityNamePascalCase }}Id).NotNull();
            RuleFor(x => x.Name).NotNull();
        }
    }

    public class {{ entityNamePascalCase }}Dto
    {        
        public Guid {{ entityNamePascalCase }}Id { get; set; }
        public string Name { get; set; }
        public int Version { get; set; }
    }

    public static class {{ entityNamePascalCase }}Extensions
    {        
        public static {{ entityNamePascalCase }}Dto ToDto(this {{ entityNamePascalCase }} {{ entityNameCamelCase }})
            => new {{ entityNamePascalCase }}Dto
            {
                {{ entityNamePascalCase }}Id = {{ entityNameCamelCase }}.{{ entityNamePascalCase }}Id,
                Name = {{ entityNameCamelCase }}.Name,
                Version = {{ entityNameCamelCase }}.Version
            };
    }
}