using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using {{ rootNamespace }}.Clients;

namespace {{ namespace }}
{
    [Authorize]
    [ApiController]
    [Route("api/{{ entityNameLowerCasePlural }}")]
    public class {{ entityNamePascalCase }}Controller
    {
        private readonly {{ entityNamePascalCasePlural }}Client _client;

        public {{ entityNamePascalCase }}Controller({{ entityNamePascalCasePlural }}Client client) => _client = client;

        [HttpPost]
        public async Task<ActionResult<dynamic>> Save(dynamic {{ entityNameCamelCase }})
            => await _client.Save({{ entityNameCamelCase }});

        [HttpDelete("{{{ entityNameCamelCase }}Id}")]
        public async Task Remove(int {{ entityNameCamelCase }}Id)
            => await _client.Remove({{ entityNameCamelCase }}Id);

        [HttpGet("{{{ entityNameCamelCase }}Id}")]
        public async Task<ActionResult<dynamic>> GetById([FromRoute]int {{ entityNameCamelCase }}Id)
            => await _client.GetById({{ entityNameCamelCase }}Id);

        [HttpGet]
        public async Task<ActionResult<dynamic>> Get()
            => await _client.Get();
    }
}
