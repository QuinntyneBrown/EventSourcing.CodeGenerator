using {{ rootNamespace }}.Core.Interfaces;
using MediatR;
using System.Threading;
using System.Threading.Tasks;

namespace {{ namespace }}
{
    public class {{ namePascalCase }}SagaCommand
    {
        public class Request : IRequest<Response> { }

        public class Response
        {

        }

        public class Handler : IRequestHandler<Request, Response>
        {
            public IAppDbContext _context { get; set; }
            private readonly IMediator _mediator;

            public Handler(IAppDbContext context, IMediator mediator)
            {
                _context = context;
                _mediator = mediator;
            }

            public async Task<Response> Handle(Request request, CancellationToken cancellationToken) {
			    return new Response() { };
            }
        }
    }
}
